# Generated by Django 4.0.7 on 2022-10-15 13:13


import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

import cciw.officers.fields


class Migration(migrations.Migration):

    replaces = [
        ("officers", "0001_initial"),
        ("officers", "0002_referenceaction"),
        ("officers", "0003_auto_20150423_2007"),
        ("officers", "0004_auto_20150605_1737"),
        ("officers", "0005_auto_20150605_1738"),
        ("officers", "0006_auto_20150713_1708"),
        ("officers", "0007_auto_20150814_1110"),
        ("officers", "0008_referenceaction_inaccurate"),
        ("officers", "0009_referenceform_inaccurate"),
        ("officers", "0010_auto_20151007_1420"),
        ("officers", "0011_referee"),
        ("officers", "0012_auto_20151007_1544"),
        ("officers", "0013_referenceaction_referee"),
        ("officers", "0014_auto_20151007_1555"),
        ("officers", "0015_auto_20151007_1603"),
        ("officers", "0016_referenceform_referee"),
        ("officers", "0017_auto_20151007_1604"),
        ("officers", "0018_auto_20151007_1606"),
        ("officers", "0019_auto_20151007_1611"),
        ("officers", "0020_auto_20151007_1631"),
        ("officers", "0021_auto_20151007_1632"),
        ("officers", "0022_auto_20151007_1637"),
        ("officers", "0023_auto_20151008_0857"),
        ("officers", "0024_auto_20151009_1632"),
        ("officers", "0025_auto_20160927_0727"),
        ("officers", "0026_qualificationtype"),
        ("officers", "0027_qualification"),
        ("officers", "0028_auto_20161118_2338"),
        ("officers", "0029_auto_20170207_2202"),
        ("officers", "0030_application_crb_number"),
        ("officers", "0031_auto_20170303_1040"),
        ("officers", "0032_auto_20170303_2056"),
        ("officers", "0033_auto_20170303_2056"),
        ("officers", "0034_auto_20170303_2108"),
        ("officers", "0035_auto_20170303_2121"),
        ("officers", "0036_dbscheck_check_type"),
        ("officers", "0037_auto_20170303_2128"),
        ("officers", "0038_auto_20170304_1118"),
        ("officers", "0039_auto_20170304_1119"),
        ("officers", "0040_auto_20170304_1134"),
        ("officers", "0041_auto_20170304_1134"),
        ("officers", "0042_dbsactionlog_user"),
        ("officers", "0043_dbsactionlog_action_type"),
        ("officers", "0044_auto_20170304_1202"),
        ("officers", "0045_auto_20170403_1856"),
        ("officers", "0046_auto_20170403_1916"),
        ("officers", "0047_dbscheck_applicant_accepted"),
        ("officers", "0048_auto_20170403_1952"),
        ("officers", "0049_auto_20170405_2330"),
        ("officers", "0050_auto_20170421_1328"),
        ("officers", "0051_auto_20170422_1133"),
        ("officers", "0052_auto_20170422_1215"),
        ("officers", "0053_auto_20170602_0851"),
        ("officers", "0054_auto_20170613_1208"),
        ("officers", "0055_auto_20170613_1208"),
        ("officers", "0056_auto_20191208_1916"),
        ("officers", "0056_auto_20190801_2018"),
        ("officers", "0057_merge_20191211_1754"),
        ("officers", "0058_referee_capacity_known"),
        ("officers", "0059_auto_20201218_1322"),
        ("officers", "0060_auto_20210204_0802"),
        ("officers", "0061_application_erased_on"),
        ("officers", "0062_auto_20210412_0837"),
        ("officers", "0063_auto_20210506_0806"),
        ("officers", "0064_auto_20210818_1235"),
        ("officers", "0065_reference_given_in_confidence"),
        ("officers", "0066_alter_reference_options"),
    ]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Application",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "full_name",
                    cciw.officers.fields.RequiredCharField(blank=True, max_length=100, verbose_name="full name"),
                ),
                (
                    "birth_date",
                    cciw.officers.fields.RequiredDateField(
                        blank=True, default=None, null=True, verbose_name="date of birth"
                    ),
                ),
                (
                    "birth_place",
                    cciw.officers.fields.RequiredCharField(blank=True, max_length=60, verbose_name="place of birth"),
                ),
                (
                    "address_firstline",
                    cciw.officers.fields.RequiredCharField(blank=True, max_length=40, verbose_name="address"),
                ),
                (
                    "address_town",
                    cciw.officers.fields.RequiredCharField(blank=True, max_length=60, verbose_name="town/city"),
                ),
                (
                    "address_county",
                    cciw.officers.fields.RequiredCharField(blank=True, max_length=30, verbose_name="county"),
                ),
                (
                    "address_postcode",
                    cciw.officers.fields.RequiredCharField(blank=True, max_length=10, verbose_name="post code"),
                ),
                (
                    "address_country",
                    cciw.officers.fields.RequiredCharField(blank=True, max_length=30, verbose_name="country"),
                ),
                (
                    "address_tel",
                    cciw.officers.fields.RequiredCharField(blank=True, max_length=22, verbose_name="telephone"),
                ),
                ("address_mobile", models.CharField(blank=True, max_length=22, verbose_name="mobile")),
                (
                    "address_email",
                    cciw.officers.fields.RequiredEmailField(blank=True, max_length=254, verbose_name="email"),
                ),
                (
                    "christian_experience",
                    cciw.officers.fields.RequiredTextField(blank=True, verbose_name="christian experience"),
                ),
                (
                    "youth_experience",
                    cciw.officers.fields.RequiredTextField(blank=True, verbose_name="youth work experience"),
                ),
                (
                    "youth_work_declined",
                    cciw.officers.fields.RequiredExplicitBooleanField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Have you ever had an offer to work with children/young people declined?",
                    ),
                ),
                ("youth_work_declined_details", models.TextField(blank=True, verbose_name="details")),
                (
                    "relevant_illness",
                    cciw.officers.fields.RequiredExplicitBooleanField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Do you suffer or have you suffered from any\n            illness which may directly affect your work with children/young people?",
                    ),
                ),
                ("illness_details", models.TextField(blank=True, verbose_name="illness details")),
                (
                    "crime_declaration",
                    cciw.officers.fields.RequiredExplicitBooleanField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Have you ever been charged with or convicted of a criminal offence or are the subject of criminal proceedings?",
                    ),
                ),
                ("crime_details", models.TextField(blank=True, verbose_name="If yes, give details")),
                (
                    "court_declaration",
                    cciw.officers.fields.RequiredExplicitBooleanField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Have you ever been involved in Court\n           proceedings concerning a child for whom you have\n           parental responsibility?",
                    ),
                ),
                ("court_details", models.TextField(blank=True, verbose_name="If yes, give details")),
                (
                    "concern_declaration",
                    cciw.officers.fields.RequiredExplicitBooleanField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Has there ever been any cause for concern regarding your conduct with children/young people?",
                    ),
                ),
                ("concern_details", models.TextField(blank=True, verbose_name="If yes, give details")),
                (
                    "allegation_declaration",
                    cciw.officers.fields.RequiredExplicitBooleanField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="To your knowledge have you ever had any allegation made against you concerning children/young people which has been reported to and investigated by Social Services and /or the Police?",
                    ),
                ),
                (
                    "dbs_check_consent",
                    cciw.officers.fields.RequiredExplicitBooleanField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Do you consent to the obtaining of a Disclosure and Barring Service check on yourself? ",
                    ),
                ),
                ("finished", models.BooleanField(default=False, verbose_name="is the above information complete?")),
                ("date_saved", models.DateField(blank=True, null=True, verbose_name="date saved")),
                (
                    "officer",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="applications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "dbs_number",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Current enhanced DBS number with update service. Number usually starts 00…",
                        max_length=128,
                        verbose_name="DBS number",
                    ),
                ),
                ("dietary_requirements", models.TextField(blank=True, verbose_name="dietary requirements (if any)")),
                ("erased_on", models.DateTimeField(blank=True, default=None, null=True)),
            ],
            options={
                "ordering": ("-date_saved", "officer__first_name", "officer__last_name"),
                "base_manager_name": "objects",
            },
        ),
        migrations.CreateModel(
            name="Referee",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "referee_number",
                    models.SmallIntegerField(choices=[(1, "1"), (2, "2")], verbose_name="Referee number"),
                ),
                (
                    "name",
                    cciw.officers.fields.RequiredCharField(
                        blank=True,
                        help_text="Name only - please do not include job title or other information.",
                        max_length=100,
                        verbose_name="Name",
                    ),
                ),
                (
                    "address",
                    cciw.officers.fields.RequiredAddressField(
                        blank=True, help_text="Full address, including post code and country", verbose_name="address"
                    ),
                ),
                ("tel", models.CharField(blank=True, max_length=22, verbose_name="telephone")),
                ("mobile", models.CharField(blank=True, max_length=22, verbose_name="mobile")),
                ("email", models.EmailField(blank=True, max_length=254, verbose_name="email")),
                (
                    "application",
                    models.ForeignKey(
                        limit_choices_to={"finished": True},
                        on_delete=django.db.models.deletion.CASCADE,
                        to="officers.application",
                    ),
                ),
                (
                    "capacity_known",
                    cciw.officers.fields.RequiredCharField(
                        blank=True,
                        help_text="In what capacity does the referee know you? (see above)",
                        max_length=255,
                        verbose_name="Capacity known",
                    ),
                ),
            ],
            options={
                "ordering": (
                    "application__date_saved",
                    "application__officer__first_name",
                    "application__officer__last_name",
                    "referee_number",
                ),
                "unique_together": {("application", "referee_number")},
            },
        ),
        migrations.CreateModel(
            name="DBSCheck",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("dbs_number", models.CharField(max_length=20, verbose_name="Disclosure number")),
                (
                    "completed",
                    models.DateField(
                        help_text="For full forms, use the date of issue. For online checks, use the date of the check",
                        verbose_name="Date of issue/check",
                    ),
                ),
                (
                    "officer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="dbs_checks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "other_organisation",
                    models.CharField(
                        blank=True, help_text="If previous answer is not CCiW, please fill in", max_length=255
                    ),
                ),
                (
                    "registered_with_dbs_update",
                    models.BooleanField(null=True, verbose_name="registered with DBS update service"),
                ),
                (
                    "requested_by",
                    models.CharField(
                        choices=[("CCIW", "CCiW"), ("other", "Other organisation"), ("unknown", "Unknown")],
                        default="unknown",
                        help_text="The organisation that asked for this DBS to be done, normally CCiW.",
                        max_length=20,
                    ),
                ),
                (
                    "check_type",
                    models.CharField(
                        choices=[("form", "Full form"), ("online", "Online check")],
                        default="form",
                        max_length=20,
                        verbose_name="check type",
                    ),
                ),
                (
                    "applicant_accepted",
                    models.BooleanField(
                        default=True,
                        help_text="Uncheck if the applicant could not be accepted on the basis of this DBS check",
                    ),
                ),
            ],
            options={
                "verbose_name": "DBS/CRB check",
                "verbose_name_plural": "DBS/CRB check",
                "base_manager_name": "objects",
            },
        ),
        migrations.CreateModel(
            name="DBSActionLog",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "officer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="dbsactionlogs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="dbsactions_performed",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User who performed action",
                    ),
                ),
                (
                    "action_type",
                    models.CharField(
                        choices=[
                            ("form_sent", "DBS form sent"),
                            ("leader_alert_sent", "Alert sent to leader"),
                            ("request_for_dbs_form_sent", "Request for DBS form sent"),
                        ],
                        max_length=40,
                        verbose_name="action type",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now, verbose_name="Created at")),
            ],
            options={
                "verbose_name": "DBS action log",
                "verbose_name_plural": "DBS action logs",
                "base_manager_name": "objects",
            },
        ),
        migrations.CreateModel(
            name="QualificationType",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Qualification",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date_issued", models.DateField()),
                (
                    "application",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="qualifications",
                        to="officers.application",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="qualifications",
                        to="officers.qualificationtype",
                    ),
                ),
            ],
            options={
                "ordering": ["application", "type__name"],
                "unique_together": {("application", "type")},
            },
        ),
        migrations.CreateModel(
            name="ReferenceAction",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "action_type",
                    models.CharField(
                        choices=[
                            ("requested", "Reference requested"),
                            ("received", "Reference received"),
                            ("filledin", "Reference filled in manually"),
                            ("nag", "Applicant nagged"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
                    ),
                ),
                ("inaccurate", models.BooleanField(default=False)),
                (
                    "referee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="actions", to="officers.referee"
                    ),
                ),
            ],
            options={
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="Reference",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "referee_name",
                    models.CharField(
                        help_text="Name only - please do not include job title or other information.",
                        max_length=100,
                        verbose_name="name of referee",
                    ),
                ),
                (
                    "how_long_known",
                    models.CharField(max_length=150, verbose_name="how long/since when have you known the applicant?"),
                ),
                ("capacity_known", models.TextField(verbose_name="in what capacity do you know the applicant?")),
                (
                    "known_offences",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        verbose_name="The position for which the applicant is applying requires substantial contact with children and young people. To the best of your knowledge, does the applicant have any convictions/cautions/bindovers, for any criminal offences?",
                    ),
                ),
                (
                    "known_offences_details",
                    models.TextField(blank=True, verbose_name="If the answer is yes, please identify"),
                ),
                (
                    "capability_children",
                    models.TextField(
                        verbose_name="Please comment on the applicant's capability of working with children and young people (ie. previous experience of similar work, sense of responsibility, sensitivity, ability to work with others, ability to communicate with children and young people, leadership skills)"
                    ),
                ),
                (
                    "character",
                    models.TextField(
                        verbose_name="Please comment on aspects of the applicants character (ie. Christian experience honesty, trustworthiness, reliability, disposition, faithful attendance at worship/prayer meetings.)"
                    ),
                ),
                (
                    "concerns",
                    models.TextField(
                        verbose_name="Have you ever had concerns about either this applicant's ability or suitability to work with children and young people?"
                    ),
                ),
                ("comments", models.TextField(blank=True, verbose_name="Any other comments you wish to make")),
                ("date_created", models.DateField(verbose_name="date created")),
                ("inaccurate", models.BooleanField(default=False)),
                ("referee", models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to="officers.referee")),
                (
                    "given_in_confidence",
                    models.BooleanField(
                        default=False,
                        help_text='Is this reference given "in confidence"? If yes, in the case that the applicant wishes to see the contents of the references made about them under a GDPR "Right of access" request, we will exclude the contents of this reference. It is important to us that you feel at liberty to tell us any concerns you have about the applicant, so you may tick this box if you feel it is necessary.',
                    ),
                ),
            ],
            options={
                "verbose_name": "reference",
                "base_manager_name": "objects",
            },
        ),
    ]

//
// Less Flexbox mixins
// https://github.com/radium-v/less-flexbox
//
// Copyright (c) 2014, John Kreitlow <john@radiumvinteractive.com>
// Licensed under the The MIT License (MIT).
//

#flexbox {

	.align-items(@align) {
		-webkit-align-items: @align;
		-ms-flex-align: replace(~"@{align}", 'flex-', '');
		align-items: @align;
	}

	.align-self(@align) {
		-webkit-align-self: @align;
		-ms-flex-item-align: replace(~"@{align}", 'flex-', '');
		align-self: @align;
	}

	.direction(@direction) {
		-webkit-flex-direction: @direction;
		-ms-flex-direction: @direction;
		flex-direction: @direction;
	}

	.display(@flex) {
		display: ~"-webkit-@{flex}";
		display: ~"-ms-@{flex}box";
		display: @flex;
	}

	.flex(@grow) when (isnumber(@grow)) {
		-webkit-flex: @grow;
			-ms-flex: @grow;
				flex: @grow;
	}

	.flex(@basis) when (isnumber(@basis)), (iskeyword(@basis)) {
		-webkit-flex: @basis;
			-ms-flex: @basis;
				flex: @basis;
	}

	.flex(@grow; @basis) when (isnumber(@basis)), (iskeyword(@basis)) {
		-webkit-flex: @grow @basis;
			-ms-flex: @grow @basis;
				flex: @grow @basis;
	}

	.flex(@grow; @shrink) when (isnumber(@grow)) and (isnumber(@shrink)) {
		-webkit-flex: @grow @shrink;
			-ms-flex: @grow @shrink;
				flex: @grow @shrink;
	}

	.flex(@grow; @shrink; @basis) when (isnumber(@grow)) and (isnumber(@shrink)) {
		-webkit-flex: @arguments;
		-ms-flex: @arguments;
		flex: @arguments;
	}

	.flow(@flow;...) {
		-webkit-flex-flow: @arguments;
			-ms-flex-flow: @arguments;
				flex-flow: @arguments;
	}

	.justify-content(@justify) {
		-webkit-justify-content: @justify;

		// First, remove `space-` and `flex-` prefixes
		// then, replace `between` with `justify`
		// finally, replace `around` with `distribute`
		-ms-flex-pack: replace(replace(replace(
			~"@{justify}", '(space|flex)-(.+)', '$2'),
				'between', 'justify'),
					'around', 'distribute');

		justify-content: @justify;
	}

	.align-content(@align) {
		-webkit-align-content: @align;
		-ms-flex-line-pack: replace(replace(replace(
			~"@{align}", '(space|flex)-(.+)', '$2'),
				'between', 'justify'),
					'around', 'distribute');
		align-content: @align;
	}

	.order(@order) {
		-webkit-order: @order;
		-ms-flex-order: @order;
		order: @order;
	}

	.wrap(@wrap) {
		-webkit-flex-wrap: @wrap;
		-ms-flex-wrap: @wrap;
		flex-wrap: @wrap;
	}
}

// Use these common helper classes for extends.
._flex {
	#flexbox;

	.align-content--flex-start { .align-content(flex-start); }
	.align-content--flex-end { .align-content(flex-end); }
	.align-content--center { .align-content(center); }
	.align-content--space-around { .align-content(space-around); }
	.align-content--space-between { .align-content(space-between); }
	.align-content--stretch { .align-content(stretch); }

	.align-items--baseline { .align-items(baseline); }
	.align-items--center { .align-items(center); }
	.align-items--stretch { .align-items(stretch); }
	.align-items--flex-end { .align-items(flex-end); }
	.align-items--flex-start { .align-items(flex-start); }

	.align-self--auto { .align-self(auto); }
	.align-self--baseline { .align-self(baseline); }
	.align-self--center { .align-self(center); }
	.align-self--stretch { .align-self(stretch); }
	.align-self--flex-end { .align-self(flex-end); }
	.align-self--flex-start { .align-self(flex-start); }

	.direction--column { .direction(column); }
	.direction--column-reverse { .direction(column-reverse); }
	.direction--row { .direction(row); }
	.direction--row-reverse { .direction(row-reverse); }

	.display--flex { .display(flex); }
	.display--inline-flex { .display(inline-flex); }

	.justify-content--flex-start { .justify-content(flex-start); }
	.justify-content--flex-end { .justify-content(flex-end); }
	.justify-content--center { .justify-content(center); }
	.justify-content--space-around { .justify-content(space-around); }
	.justify-content--space-between { .justify-content(space-between); }

	.wrap--wrap { .wrap(wrap); }
	.wrap--wrap-reverse { .wrap(wrap-reverse); }
}

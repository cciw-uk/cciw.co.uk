PYTHON=%(VENV_ROOT)s/bin/python
DJANGO_MANAGE=%(SRC_ROOT)s/manage.py


0,20,40 * * * *  %(PROJECT_USER)s $PYTHON $DJANGO_MANAGE retry_deferred 2>> /dev/null
0       2 * * *  %(PROJECT_USER)s $PYTHON $DJANGO_MANAGE cleanup
0       7 * * *  %(PROJECT_USER)s $PYTHON $DJANGO_MANAGE payment_reminder_emails


# Apply data retention daily
0       1 * * *  %(PROJECT_USER)s $PYTHON $DJANGO_MANAGE apply_data_retention
0       2 * * *  %(PROJECT_USER)s $PYTHON $DJANGO_MANAGE clean_orphaned_data

# expire_bookings must be run only once an hour
30      * * * *  %(PROJECT_USER)s $PYTHON $DJANGO_MANAGE expire_bookings


# Recycle webserver instance once a day
30      2 * * *  root          supervisorctl restart %(PROJECT_NAME)s_uwsgi

# Cleanup temp mail files once a day. Random hour and minute
10      3 * * *  %(PROJECT_USER)s $PYTHON $DJANGO_MANAGE cleanup_temp_mail_files


# Backups once a day
35      6 * * * %(PROJECT_USER)s  $PYTHON %(SRC_ROOT)s/backup_s3.py


# Renew letsencrypt
51         4    * * *  root          letsencrypt renew --agree-tos
# nginx won't pick up the new certificate created above until we restart it:
57         4    * * *  root          /usr/sbin/service nginx restart


# Clear out old uWSGI logs which don't rotate proplerly:
42         4    * * *  root          find /home/%(PROJECT_USER)s/logs/ -name '*_uwsgi.log.*' -mtime +7 -exec rm {} \;

# GoAccess analytics
30         23   * * *  root          goaccess --restore --persist --log-format=COMBINED /var/log/nginx/access.log /var/log/nginx/access.log.1 -o "/var/log/goaccess/report-$(date '+\%%Y-\%%m-\%%d').html" --keep-last=32
5          1    * * *  root          find /var/log/goaccess/ -name 'report-20??-??-??.html' -mtime +30 | sort | egrep '20..-..-(02|03|04|05|06|07|08|09|1.|2.|3.)' | xargs rm


# In case django-q workers crash, or use too much memory:
30         2    * * *  root          supervisorctl restart cciw_django_q

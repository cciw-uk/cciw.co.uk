
# Add www prefix:
server {
    listen 80;
    server_name cciw.co.uk;
    rewrite     ^/(.*) https://www.cciw.co.uk/$1 permanent;
}

server {
    listen 80;
    server_name %(DOMAINS_NGINX)s;
    return         301 https://$server_name$request_uri;
}


upstream app_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response

    # for UNIX domain socket setups
    server unix:/tmp/gunicorn.sock fail_timeout=0;

}

server {
    listen 443 ssl http2;
    server_name %(DOMAINS_NGINX)s;
    client_max_body_size 10M;
    keepalive_timeout    15;

    ssl_certificate      /etc/letsencrypt/live/www.cciw.co.uk/fullchain.pem;
    ssl_certificate_key  /etc/letsencrypt/live/www.cciw.co.uk/privkey.pem;

    # Based on 'intermediate' compatibility 2025-07-29 from:
    # https://ssl-config.mozilla.org/#server=nginx&version=1.24&config=intermediate&openssl=3.0.13&hsts=false&ocsp=false&guideline=5.7
    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ecdh_curve X25519:prime256v1:secp384r1;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
    ssl_prefer_server_ciphers off;

    # see also ssl_session_ticket_key alternative to stateful session cache
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions

    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    ssl_dhparam /etc/nginx/ssl/dhparams.pem;


    ####

    gzip on;
    gzip_types text/plain text/html application/xml text/css text/javascript application/javascript application/x-javascript;
    gzip_min_length 1000;
    gzip_vary on;

    # Deny illegal Host headers
    if ($host !~* ^(%(DOMAINS_REGEX)s)$) {
        return 444;
    }

    location /static/ {
        alias            %(STATIC_ROOT)s/;
        access_log      off;
        log_not_found   off;
        expires 30d;
        location /static/CACHE/ {
            expires max;
        }

    }

    location /usermedia/ {
        alias            %(MEDIA_ROOT)s/;
        access_log      off;
        log_not_found   off;
        expires 30d;
        location /usermedia/CACHE/ {
            expires max;
        }
    }

    location /favicon.ico {
        alias            %(STATIC_ROOT)s/img/favicon.png;
        access_log      off;
        log_not_found   off;
    }

    # See SECURE_DOWNLOAD_URL
    location /protected/ {
        internal;
        alias      %(SECURE_DOWNLOAD_ROOT)s/;
    }


    # Serve files that exist in root, such as
    # robots.txt and ones placed there by letsencrypt
    root %(STATIC_ROOT)s/root;

    location / {
      # checks for static file, if not found proxy to app
      try_files $uri @proxy_to_app;
    }


    # Finally, send all non-media requests to the Django server.

    location @proxy_to_app {
        add_header "X-UA-Compatible" "IE=Edge";
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;
        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;
        proxy_pass http://app_server;

    }
}
